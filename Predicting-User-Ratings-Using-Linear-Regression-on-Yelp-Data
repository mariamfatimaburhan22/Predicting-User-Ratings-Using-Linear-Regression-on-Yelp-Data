{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "a3906bb2",
   "metadata": {},
   "source": [
    "## Analysis of Yelp Dataset Portfolio2 "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b9492a4",
   "metadata": {},
   "source": [
    "The portfolio aims to use various data processing techniques to clean and preprocess the data, filter out irrelevant data, and remove any outliers that could impact the accuracy of the model. Finally, the portfolio aims to use linear regression models to train and validate the model's accuracy in predicting user ratings towards business. Ultimately, the objective is to build a reliable model that can be used to provide insights into user preferences and help businesses make data-driven decisions to improve their services and offerings. In this task, we will explore the impacts of feature selections and different sizes of training/testing data on the model performance. We will use Yelp sub-dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f9c65efd",
   "metadata": {},
   "source": [
    "### Import the output sample data from Portfolio1\n",
    "The csv file named `Yelp_Portfolio2_Input.csv` is provided. You may need to use the Pandas method, i.e., `read_csv`, for doing this. After that, please import the csv file and print out its total length."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "71dbcf80",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import linear_model\n",
    "from sklearn.metrics import r2_score\n",
    "\n",
    "import seaborn as sns\n",
    "import matplotlib.pylab as plt\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "9bc01727",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "38654\n"
     ]
    }
   ],
   "source": [
    "sample_data = pd.read_csv('Yelp_Portfolio2_Input.csv')\n",
    "print(len(sample_data))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "cbf9f046",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>business_categories</th>\n",
       "      <th>business_city</th>\n",
       "      <th>business_id</th>\n",
       "      <th>date</th>\n",
       "      <th>stars</th>\n",
       "      <th>text</th>\n",
       "      <th>useful</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Middle Eastern; Restaurants</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>6oRAC4uyJCsJl1X0WZpVSA</td>\n",
       "      <td>14/6/2012</td>\n",
       "      <td>4</td>\n",
       "      <td>love the gyro plate. Rice is so good and I als...</td>\n",
       "      <td>1</td>\n",
       "      <td>0hT2KtfLiobPvh6cDC8JQg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Tattoo; Beauty &amp; Spas</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>WGNIYMeXPyoWav1APUq7jA</td>\n",
       "      <td>23/12/2011</td>\n",
       "      <td>4</td>\n",
       "      <td>Good tattoo shop. Clean space, multiple artist...</td>\n",
       "      <td>2</td>\n",
       "      <td>Xm8HXE1JHqscXe5BKf0GFQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Tires; Automotive</td>\n",
       "      <td>Glendale</td>\n",
       "      <td>rxQ2PIjhAx6dgAqUalf99Q</td>\n",
       "      <td>9/9/2012</td>\n",
       "      <td>5</td>\n",
       "      <td>Never having dealt with a Discount Tire in Pho...</td>\n",
       "      <td>0</td>\n",
       "      <td>HLbhD2OyiMCUDRR4c1iXaw</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Sushi Bars; Restaurants</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>EC9WB-iVjd28B6R6KIZ8TA</td>\n",
       "      <td>4/8/2010</td>\n",
       "      <td>4</td>\n",
       "      <td>Cliff notes\\n- Cheap: $1-2/plate\\n- Fast: It's...</td>\n",
       "      <td>0</td>\n",
       "      <td>jdoGEEy5s-5L1O_lNzEi2g</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Arts &amp; Entertainment; Cinema</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>LDJhwZN14AZOJyHjg2lkRw</td>\n",
       "      <td>13/12/2011</td>\n",
       "      <td>4</td>\n",
       "      <td>We got passes for the preview of Mission Impos...</td>\n",
       "      <td>0</td>\n",
       "      <td>Mb0psF4WQF7gZSuZafVr-g</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            business_categories business_city             business_id  \\\n",
       "0   Middle Eastern; Restaurants         Tempe  6oRAC4uyJCsJl1X0WZpVSA   \n",
       "1         Tattoo; Beauty & Spas         Tempe  WGNIYMeXPyoWav1APUq7jA   \n",
       "2             Tires; Automotive      Glendale  rxQ2PIjhAx6dgAqUalf99Q   \n",
       "3       Sushi Bars; Restaurants         Tempe  EC9WB-iVjd28B6R6KIZ8TA   \n",
       "4  Arts & Entertainment; Cinema         Tempe  LDJhwZN14AZOJyHjg2lkRw   \n",
       "\n",
       "         date  stars                                               text  \\\n",
       "0   14/6/2012      4  love the gyro plate. Rice is so good and I als...   \n",
       "1  23/12/2011      4  Good tattoo shop. Clean space, multiple artist...   \n",
       "2    9/9/2012      5  Never having dealt with a Discount Tire in Pho...   \n",
       "3    4/8/2010      4  Cliff notes\\n- Cheap: $1-2/plate\\n- Fast: It's...   \n",
       "4  13/12/2011      4  We got passes for the preview of Mission Impos...   \n",
       "\n",
       "   useful                 user_id  \n",
       "0       1  0hT2KtfLiobPvh6cDC8JQg  \n",
       "1       2  Xm8HXE1JHqscXe5BKf0GFQ  \n",
       "2       0  HLbhD2OyiMCUDRR4c1iXaw  \n",
       "3       0  jdoGEEy5s-5L1O_lNzEi2g  \n",
       "4       0  Mb0psF4WQF7gZSuZafVr-g  "
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sample_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c16c3d9b",
   "metadata": {},
   "source": [
    "# Q1. `business_categories` processing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb5b37b2",
   "metadata": {},
   "source": [
    "You may notice that there are a total of 693 unique business categories present in the sample data. Please write a code snippet to confirm this number. Then, generate a boxplot of `stars` for `business_categories`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "0238816f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total number of unique business categories in the sampled data are 693.\n"
     ]
    }
   ],
   "source": [
    "# your code and solutions]\n",
    "unique_business_categories = sample_data['business_categories'].nunique()\n",
    "print(f'The total number of unique business categories in the sampled data are {unique_business_categories}.')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "ef3a111f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:title={'center':'stars'}, xlabel='business_categories'>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#generate a boxplot of stars for business_categories\n",
    "sample_data.boxplot(\"stars\" , by=\"business_categories\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a578c205",
   "metadata": {},
   "source": [
    "Sometimes we need to extract some major categories, such as `Middle Eastern; Restaurants` and `Sushi Bars; Restaurants`, both of which should belong to the `Restaurants` category."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69c2aae2",
   "metadata": {},
   "source": [
    "### Q1.1 How to efficiently and accurately extract the last category value (i.e., categorieN) from the `business_categories` column in a dataset, where the format of each row is a semicolon-separated list of categories (i.e., 'categorie1; categorie2;...;categorieN')? and replace the original string with this last category value. At last, print the first five rows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "5bbfb1c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>business_categories</th>\n",
       "      <th>business_city</th>\n",
       "      <th>business_id</th>\n",
       "      <th>date</th>\n",
       "      <th>stars</th>\n",
       "      <th>text</th>\n",
       "      <th>useful</th>\n",
       "      <th>user_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Restaurants</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>6oRAC4uyJCsJl1X0WZpVSA</td>\n",
       "      <td>14/6/2012</td>\n",
       "      <td>4</td>\n",
       "      <td>love the gyro plate. Rice is so good and I als...</td>\n",
       "      <td>1</td>\n",
       "      <td>0hT2KtfLiobPvh6cDC8JQg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spas</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>WGNIYMeXPyoWav1APUq7jA</td>\n",
       "      <td>23/12/2011</td>\n",
       "      <td>4</td>\n",
       "      <td>Good tattoo shop. Clean space, multiple artist...</td>\n",
       "      <td>2</td>\n",
       "      <td>Xm8HXE1JHqscXe5BKf0GFQ</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Automotive</td>\n",
       "      <td>Glendale</td>\n",
       "      <td>rxQ2PIjhAx6dgAqUalf99Q</td>\n",
       "      <td>9/9/2012</td>\n",
       "      <td>5</td>\n",
       "      <td>Never having dealt with a Discount Tire in Pho...</td>\n",
       "      <td>0</td>\n",
       "      <td>HLbhD2OyiMCUDRR4c1iXaw</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Restaurants</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>EC9WB-iVjd28B6R6KIZ8TA</td>\n",
       "      <td>4/8/2010</td>\n",
       "      <td>4</td>\n",
       "      <td>Cliff notes\\n- Cheap: $1-2/plate\\n- Fast: It's...</td>\n",
       "      <td>0</td>\n",
       "      <td>jdoGEEy5s-5L1O_lNzEi2g</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Cinema</td>\n",
       "      <td>Tempe</td>\n",
       "      <td>LDJhwZN14AZOJyHjg2lkRw</td>\n",
       "      <td>13/12/2011</td>\n",
       "      <td>4</td>\n",
       "      <td>We got passes for the preview of Mission Impos...</td>\n",
       "      <td>0</td>\n",
       "      <td>Mb0psF4WQF7gZSuZafVr-g</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  business_categories business_city             business_id        date  \\\n",
       "0         Restaurants         Tempe  6oRAC4uyJCsJl1X0WZpVSA   14/6/2012   \n",
       "1                Spas         Tempe  WGNIYMeXPyoWav1APUq7jA  23/12/2011   \n",
       "2          Automotive      Glendale  rxQ2PIjhAx6dgAqUalf99Q    9/9/2012   \n",
       "3         Restaurants         Tempe  EC9WB-iVjd28B6R6KIZ8TA    4/8/2010   \n",
       "4              Cinema         Tempe  LDJhwZN14AZOJyHjg2lkRw  13/12/2011   \n",
       "\n",
       "   stars                                               text  useful  \\\n",
       "0      4  love the gyro plate. Rice is so good and I als...       1   \n",
       "1      4  Good tattoo shop. Clean space, multiple artist...       2   \n",
       "2      5  Never having dealt with a Discount Tire in Pho...       0   \n",
       "3      4  Cliff notes\\n- Cheap: $1-2/plate\\n- Fast: It's...       0   \n",
       "4      4  We got passes for the preview of Mission Impos...       0   \n",
       "\n",
       "                  user_id  \n",
       "0  0hT2KtfLiobPvh6cDC8JQg  \n",
       "1  Xm8HXE1JHqscXe5BKf0GFQ  \n",
       "2  HLbhD2OyiMCUDRR4c1iXaw  \n",
       "3  jdoGEEy5s-5L1O_lNzEi2g  \n",
       "4  Mb0psF4WQF7gZSuZafVr-g  "
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for i in range(len(sample_data)):\n",
    "    categories = sample_data.at[i,'business_categories']\n",
    "    if ';' in categories:\n",
    "        split_categories = categories.split(';')\n",
    "        last_category = split_categories[-1].split()[-1]\n",
    "        sample_data.at[i,'business_categories'] = last_category\n",
    "    else: \n",
    "        sample_data.at[i,'business_categories'] = categories.split()[-1]\n",
    "sample_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d77d3c0",
   "metadata": {},
   "source": [
    "### Q1.2 Let's first check how many unique business categories are present in the dataset (output from Q1.1). Maybe it's still not an appropriate number to make a clear Boxplot. Now, we want to display `ALL Rows` of the business category count data. That is to count and print the number of occurrences for each business category."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "36f87584",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The unique business categories that are present in the dataset are: 139\n"
     ]
    }
   ],
   "source": [
    "#check how many unique business categories are present in the dataset \n",
    "unique_business_categories = sample_data['business_categories'].nunique()\n",
    "print(f'The unique business categories that are present in the dataset are:',unique_business_categories)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "40fe781f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Restaurants              25212\n",
       "Tea                       1116\n",
       "Shopping                  1099\n",
       "Italian                    960\n",
       "Yogurt                     728\n",
       "Hotels                     528\n",
       "Spas                       498\n",
       "Stores                     451\n",
       "Nightlife                  399\n",
       "Services                   396\n",
       "Grocery                    390\n",
       "Food                       351\n",
       "Venues                     348\n",
       "Instruction                336\n",
       "Automotive                 334\n",
       "Arenas                     275\n",
       "Spirits                    242\n",
       "Parks                      235\n",
       "Salons                     219\n",
       "Cinema                     218\n",
       "Bookstores                 208\n",
       "Desserts                   183\n",
       "Pets                       166\n",
       "Donuts                     116\n",
       "Clubs                      115\n",
       "Arts                       112\n",
       "Lounges                    109\n",
       "Shops                      105\n",
       "Stations                   101\n",
       "Wear                        95\n",
       "Clothing                    95\n",
       "Drugstores                  93\n",
       "Government                  92\n",
       "Laundry                     87\n",
       "Turkish                     85\n",
       "Dealers                     83\n",
       "Breweries                   79\n",
       "Caterers                    78\n",
       "Entertainment               74\n",
       "Education                   73\n",
       "Spaces                      69\n",
       "Garden                      68\n",
       "Accessories                 66\n",
       "Bakeries                    64\n",
       "Care                        56\n",
       "Transportation              54\n",
       "Phones                      52\n",
       "Apartments                  52\n",
       "Medical                     52\n",
       "Repair                      50\n",
       "Supplies                    50\n",
       "Bars                        50\n",
       "Golf                        49\n",
       "Karaoke                     48\n",
       "Appliances                  48\n",
       "Market                      47\n",
       "Contractors                 45\n",
       "Antiques                    44\n",
       "Rentals                     44\n",
       "Life                        43\n",
       "Alterations                 40\n",
       "Crafts                      40\n",
       "Smoothies                   39\n",
       "Hospitals                   38\n",
       "Dentistry                   37\n",
       "Bowling                     37\n",
       "Flavor                      36\n",
       "Sandwiches                  31\n",
       "Furniture                   31\n",
       "Lakes                       31\n",
       "Gifts                       31\n",
       "Bagels                      29\n",
       "Installation                28\n",
       "Centers                     26\n",
       "Jewelry                     24\n",
       "Teams                       24\n",
       "Dentists                    24\n",
       "Pizza                       23\n",
       "Electronics                 20\n",
       "Equipment                   18\n",
       "Rental                      18\n",
       "Florists                    17\n",
       "Control                     17\n",
       "Arcades                     17\n",
       "Decor                       16\n",
       "Tires                       16\n",
       "Naturopathic/Holistic       16\n",
       "Service/Non-Profit          15\n",
       "Medicine                    15\n",
       "Riding                      15\n",
       "Organizations               15\n",
       "Estate                      15\n",
       "Wineries                    13\n",
       "Hiking                      12\n",
       "Festivals                   12\n",
       "Conditioning/HVAC           12\n",
       "Supply                      12\n",
       "Planning                    11\n",
       "Adult                       11\n",
       "Video                       11\n",
       "Insurance                   11\n",
       "Opticians                   11\n",
       "Tennis                      10\n",
       "Activities                  10\n",
       "Media                       10\n",
       "Chiropractors               10\n",
       "Rafting/Kayaking             9\n",
       "Pediatricians                9\n",
       "Design                       8\n",
       "Gear                         8\n",
       "Litigation                   8\n",
       "Storage                      7\n",
       "DVDs                         7\n",
       "Agents                       7\n",
       "Removal                      6\n",
       "Gynecologists                6\n",
       "Vendors                      6\n",
       "Cafes                        6\n",
       "Fashion                      6\n",
       "Reupholstery                 6\n",
       "Pools                        5\n",
       "Costumes                     4\n",
       "Photographers                4\n",
       "Ammo                         4\n",
       "Towing                       4\n",
       "Brazilian                    4\n",
       "Archery                      4\n",
       "Flooring                     3\n",
       "Tours                        3\n",
       "Breakfast                    3\n",
       "Notaries                     3\n",
       "Providers                    3\n",
       "Preschools                   3\n",
       "Astrologers                  3\n",
       "Orthodontists                3\n",
       "Hauling                      3\n",
       "Photography                  3\n",
       "Therapy                      3\n",
       "Doctors                      3\n",
       "Name: business_categories, dtype: int64"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rating_item = sample_data['business_categories'].value_counts()\n",
    "#display ALL Rows of the business category count data. \n",
    "\n",
    "pd.options.display.max_rows = None\n",
    "rating_item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1c4f446f",
   "metadata": {},
   "source": [
    "### Q1.3 We want to remove categories that appear fewer than 200 times. Write a Python code snippet to perform this operation. At last, print the number of resulting unique business_categories."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "5b55e321",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34543"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "count = sample_data['business_categories'].value_counts()\n",
    "less_than200 = count[count >= 200].index\n",
    "sample_data = sample_data[sample_data['business_categories'].isin(less_than200)]\n",
    "len(sample_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "31f780a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Restaurants    25212\n",
       "Tea             1116\n",
       "Shopping        1099\n",
       "Italian          960\n",
       "Yogurt           728\n",
       "Hotels           528\n",
       "Spas             498\n",
       "Stores           451\n",
       "Nightlife        399\n",
       "Services         396\n",
       "Grocery          390\n",
       "Food             351\n",
       "Venues           348\n",
       "Instruction      336\n",
       "Automotive       334\n",
       "Arenas           275\n",
       "Spirits          242\n",
       "Parks            235\n",
       "Salons           219\n",
       "Cinema           218\n",
       "Bookstores       208\n",
       "Name: business_categories, dtype: int64"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#number of resulting unique business_categories.\n",
    "rating_item = sample_data['business_categories'].value_counts()\n",
    "pd.options.display.max_rows = None\n",
    "rating_item"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1649f53c",
   "metadata": {},
   "source": [
    "# Q2. Outliers"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5c649505",
   "metadata": {},
   "source": [
    "### Q2.1 Remove any rows from the sample_data DataFrame (output from Q1.3) where the `useful` column has a value of 6 or more; Then, create a single figure with two subplots, one showing the boxplot of `useful` column of the original data and the other showing the boxplot of the data with outliers removed. \n",
    "\n",
    "At last, __print the length of the data__."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "ebe4f742",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "33564"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "useful_outlier_removed_df = sample_data[~(sample_data['useful'] >= 6)]\n",
    "len(useful_outlier_removed_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "7d370bb0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a single figure with two subplots\n",
    "fig, axs = plt.subplots(1,2,figsize =(10,5))\n",
    "\n",
    "# create boxplot of original data \n",
    "axs[0].boxplot(sample_data['useful'])\n",
    "axs[0].set_title('boxplot of original data')\n",
    "\n",
    "#create boxplot of  data with outliers removed\n",
    "axs[1].boxplot(useful_outlier_removed_df['useful'])\n",
    "axs[1].set_title('boxplot of data with outliers removed')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c29233a",
   "metadata": {},
   "source": [
    "### Q2.2 In general, we might remove some inactive users from a dataset (output from Q2.1), for example, users who rate businesses less than 3 times. However, in this case, we are doing the opposite and removing extremely active users who rate businesses more than 30 times (>30). Again, create a single figure with two subplots, one showing the boxplot of the count of business rating given by each user and the other showing the boxplot of the data with outliers removed. \n",
    "\n",
    "At last, __print the length of the data__."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "37c6d963",
   "metadata": {},
   "outputs": [],
   "source": [
    "user_rating_df =useful_outlier_removed_df.groupby('user_id')['stars'].count().reset_index(name='count')\n",
    "new_userid = user_rating_df[user_rating_df['count'] <= 30]['user_id'].tolist()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "d06054e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "userid_outlier_removed_df =useful_outlier_removed_df [useful_outlier_removed_df['user_id'].isin(new_userid)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "e5fe856e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The length of data is: 30552\n"
     ]
    }
   ],
   "source": [
    "print(f'The length of data is:' , len(userid_outlier_removed_df))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "a9060fef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#create a single figure with two subplots\n",
    "fig, axs = plt.subplots(1,2,figsize =(10,5))\n",
    "\n",
    "# create boxplot of original data \n",
    "axs[0].boxplot(useful_outlier_removed_df['useful'])\n",
    "axs[0].set_title('boxplot of before user_id outliers removed')\n",
    "\n",
    "#create boxplot of  data with outliers removed\n",
    "axs[1].boxplot(userid_outlier_removed_df['useful'])\n",
    "axs[1].set_title('boxplot of data with user_id outliers removed')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95827eb7",
   "metadata": {},
   "source": [
    "# Q3. Training a LinearRegression model on the data output from Q2.2."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd4568bd",
   "metadata": {},
   "source": [
    "### Q3.1 How to build a linear regression model on a subset of the data, using the `useful` column as the input variable and the `stars` column as the output variable. Split the data into a training set and a test set, with 70% of the data used for training. The random_state is set to 42."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "d5ede6ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = userid_outlier_removed_df[['useful']]\n",
    "y = userid_outlier_removed_df['stars']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "ba4ba63a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reg = linear_model.LinearRegression()\n",
    "reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "c348a9ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = reg.predict(X_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "45ae351a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean squared error is: 1.5365596214789998\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import mean_squared_error\n",
    "mean_squared_error(y_test, y_pred)\n",
    "print ('Mean squared error is:', mean_squared_error(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "2421a871",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "rmse is: 1.2395804215455324\n"
     ]
    }
   ],
   "source": [
    "rmse = np.sqrt(mean_squared_error(y_test, y_pred))\n",
    "print ('rmse is:', rmse)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a863d87e",
   "metadata": {},
   "source": [
    "### Q3.2 Assuming that the number of reviews a business has received  `business_review_count`  can greatly influence the average rating that the business has received. Now, we create the relevant variable to the data, and do the LinearRegression again to the `stars`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "40aa4aae",
   "metadata": {},
   "outputs": [],
   "source": [
    "business_review_count = userid_outlier_removed_df.groupby('business_id')['text'].count().reset_index()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "6b4fd80b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>business_id</th>\n",
       "      <th>business_review_count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-4QayefhaPXm6wPp-Zpb0A</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-6yIYUuwYcZnClI_8_ojVg</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-92fePI5W6MwOaxMxphFjA</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0-A_cxbEmlkkq0362cvi3A</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>01cQQpeEwWpzTgv6YUQhAQ</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              business_id  business_review_count\n",
       "0  -4QayefhaPXm6wPp-Zpb0A                      3\n",
       "1  -6yIYUuwYcZnClI_8_ojVg                      3\n",
       "2  -92fePI5W6MwOaxMxphFjA                      5\n",
       "3  0-A_cxbEmlkkq0362cvi3A                      4\n",
       "4  01cQQpeEwWpzTgv6YUQhAQ                      3"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bus_review_count= business_review_count.rename(columns={'text' : \"business_review_count\"})\n",
    "bus_review_count.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "6d6904eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "new_merged_data = pd.merge(userid_outlier_removed_df ,bus_review_count, on='business_id')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "41d6f33a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 142,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X = new_merged_data[['business_review_count']]\n",
    "y = new_merged_data['stars']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n",
    "reg = linear_model.LinearRegression()\n",
    "reg.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "83813667",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean squared error is: 1.5064068914834368\n"
     ]
    }
   ],
   "source": [
    "mean_squared_error(y_test, y_pred)\n",
    "print ('Mean squared error is:', mean_squared_error(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "417bf155",
   "metadata": {},
   "source": [
    "### Q3.3 Output the correlations between `business_review_count` and `useful` variables with `stars` and analyze the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "a7164392",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The correlation between business review count and stars: 0.14684886627188748\n"
     ]
    }
   ],
   "source": [
    "new_merged_data['business_review_count'].corr(new_merged_data['stars'])\n",
    "print(f'The correlation between business review count and stars:', new_merged_data['business_review_count'].corr(new_merged_data['stars'])\n",
    " )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "b9e91988",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The correlation between useful and stars: -0.07358801457441545\n"
     ]
    }
   ],
   "source": [
    "new_merged_data['useful'].corr(new_merged_data['stars'])\n",
    "print(f'The correlation between useful and stars:', new_merged_data['useful'].corr(new_merged_data['stars']))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e993e84f",
   "metadata": {},
   "source": [
    "## Analysis:\n",
    "There is a **positive but weak correlation** of **0.14684886627188748** between business review count and stars. This means that as the business review counts will increase, the stars will also increase. \n",
    "\n",
    "There is a **negative and weak correlation** of **-0.07358801457441545** between useful and star.This means that as the useful reviews will increase the stars will decrease. "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
